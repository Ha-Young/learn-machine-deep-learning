# -*- coding: utf-8 -*-
"""모두를 위한 Deep Learning 실습용

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OZPl0Ngk_Eeufa8uM52NoT_XXEdiq1n8
"""

import tensorflow.compat.v1 as tf
tf.disable_v2_behavior()

sess = tf.Session()

x_train = [1, 2, 3]
y_train = [1, 2, 3]

W = tf.Variable(tf.random_normal([1]), name='weight')
b = tf.Variable(tf.random_normal([1]), name='bias')

hypothesis = x_train * W + b

cost = tf.reduce_mean(tf.square(hypothesis - y_train))

optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)
train = optimizer.minimize(cost)

sess.run(tf.global_variables_initializer())

for step in range(2001):
    sess.run(train)
    if step % 20 == 0:
        print(step, sess.run(cost), sess.run(W), sess.run(b))

X = tf.placeholder(tf.float32, shape=[None])
Y = tf.placeholder(tf.float32, shape=[None])

W = tf.Variable(tf.random_normal([1]), name='weight')
b = tf.Variable(tf.random_normal([1]), name='bias')

hypothesis2 = X*W + b

cost2 = tf.reduce_mean(tf.square(hypothesis2 - Y))

optimizer2 = tf.train.GradientDescentOptimizer(learning_rate=0.01)
train2 = optimizer2.minimize(cost2)

sess.run(tf.global_variables_initializer())

for step in range(4001):
    cost_val, W_val, b_val, _ = sess.run([cost2, W, b, train2], feed_dict={
                                         X: [1, 2, 3], Y: [1, 2, 3]})

    if step % 20 == 0:
        print(step, cost_val, W_val, b_val)
